name: Create GitHub Release on Merge

on:
  push:
    branches:
      - dev # Nhánh mà PR Release sẽ được merge vào
      # - main # Nếu bạn merge vào main thay vì dev

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Cần quyền để tạo release và tag
      pull-requests: write # Có thể không cần nếu chỉ tạo release, nhưng an toàn để có

    if: github.actor == 'github-actions[bot]' # Chỉ chạy nếu commit được đẩy bởi bot của bạn (từ PR merge)
    # Hoặc nếu không muốn dựa vào bot:
    # if: contains(github.event.head_commit.message, 'chore(release): prepare for v')
    # để đảm bảo đây là commit từ PR release.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Đảm bảo lấy toàn bộ lịch sử để semantic-release hoặc các công cụ khác hoạt động đúng

      - name: Setup Node & Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.4

      - name: Install dependencies
        run: bun install

      - name: Install JQ
        run: sudo apt-get update && sudo apt-get install -y jq

      # Chạy lại semantic-release ở đây để có được thông tin release mới nhất
      # và tạo tag tự động nếu cấu hình semantic-release của bạn có plugin @semantic-release/git
      # Lưu ý: Sẽ không tạo PR lần nữa.
      - name: Run semantic-release (to create release tag and get release info)
        id: semantic_release_run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "--- START: semantic-release execution for release creation ---"
          set -o pipefail
          npx semantic-release --debug 2>&1 | tee semantic_release_raw_output.txt || {
            echo "semantic-release command failed with exit code $?."
            cat semantic_release_raw_output.txt
            exit 1
          }
          echo "--- END: semantic-release execution for release creation ---"

          # Trích xuất phiên bản và release notes tương tự như workflow PR
          NEW_VERSION_FROM_CHANGELOG=""
          NEW_VERSION_FROM_CHANGELOG=$(
            grep -E '^##\s(v)?[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9\.]+)?\s+\([0-9]{4}-[0-9]{2}-[0-9]{2}\)' CHANGELOG.md |
            head -n 1 |
            sed -E 's/^##\s(v)?([0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9\.]+)?)\s+\([0-9]{4}-[0-9]{2}-[0-9]{2}\).*$/\2/'
          )

          RELEASE_NOTES_BODY=$(
              sed -n '/^## '"$NEW_VERSION_FROM_CHANGELOG"'\s/,/^##/P' CHANGELOG.md |
              grep -v '^## ' |
              sed 's/^\s*//;s/\s*$//' |
              awk 'NF {found=1} {if ($0 !~ /^\s*$/) print}'
          )
          if [ -z "$RELEASE_NOTES_BODY" ]; then
              RELEASE_NOTES_BODY="No detailed release notes available."
          fi
          ESCAPED_RELEASE_NOTES_BODY=$(echo "$RELEASE_NOTES_BODY" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | tr -d '\n')

          echo "new_version=$NEW_VERSION_FROM_CHANGELOG" >> "$GITHUB_OUTPUT"
          echo "release_notes_pr_body<<EOF" >> "$GITHUB_OUTPUT"
          echo "$RELEASE_NOTES_BODY" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      # Bước tạo GitHub Release (Sử dụng thông tin đã trích xuất từ semantic-release)
      - name: Create GitHub Release
        if: steps.semantic_release_run.outputs.new_version != 'none' # Chỉ tạo release nếu có phiên bản mới
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.semantic_release_run.outputs.new_version }}
          release_name: Release v${{ steps.semantic_release_run.outputs.new_version }}
          body: |
            ${{ steps.semantic_release_run.outputs.release_notes_pr_body }}

            Please refer to the [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/v${{ steps.semantic_release_run.outputs.new_version }}/CHANGELOG.md) for full details on this release.
          draft: false
          prerelease: ${{ contains(github.ref, 'dev') || contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
