name: Get Tag For Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to build for (e.g., STG or PROD)"
        type: choice
        required: true
        options:
          - STG
          - PROD
      tag_to_deploy:
        description: "Specify the tag to deploy (e.g., v1.2.3). Leave empty to deploy the LATEST tag for the selected environment."
        type: string
        required: false
        default: ""

jobs:
  create_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.final_tag.outputs.tag }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Check if user is the repo admin
        id: check-admin
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          PERMISSION=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission" \
            | jq -r '.permission')

          if [ "$PERMISSION" != "admin" ]; then
            echo "‚ùå User ${{ github.actor }} is not an admin. Deployment stopped."
            exit 1
          fi
          echo "‚úÖ Admin check passed for user ${{ github.actor }}"

      - name: Check if tag is not provided
        run: |
          if [ -z "${{ github.event.inputs.tag_to_deploy }}" ]; then
            echo "‚ùå No tag specified. The 'tag_to_deploy' input is required."
            exit 1
          fi

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG="${{ github.event.inputs.tag_to_deploy }}"
          echo "üîç Checking if tag '$TAG' exists in the repository."
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
            echo "‚úÖ Tag '$TAG' exists."
          else
            echo "‚ùå Tag '$TAG' not found in the repository."
            exit 1
          fi

      - name: Trigger Build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          TAG="${{ github.event.inputs.tag_to_deploy }}"
          ENVIRONMENT="${{ github.event.inputs.environment }}"

          echo "üöÄ Triggering build with tag: $TAG for environment: $ENVIRONMENT"

          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d "{\"event_type\":\"trigger-build\",\"client_payload\":{\"environment\":\"$ENVIRONMENT\",\"ref_name\":\"$TAG\"}}"

          # echo "‚úÖ Build trigger sent successfully"
