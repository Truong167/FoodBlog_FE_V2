name: Test and Build

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - labeled
      - synchronize

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    if: contains(github.event.pull_request.labels.*.name, 'ready for review') || github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: oven-sh/setup-bun@v1
        name: Install bun
        id: bun-install
        with:
          bun-version: 1.1.4

      - name: Cache dependencies
        uses: actions/cache@v4
        id: bun-cache
        with:
          path: |
            **/node_modules
            ~/.bun/install/cache
            .bun
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun install

      - name: Find and run tests
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --name-only --diff-filter=AMCR origin/${{ github.base_ref }}...HEAD -- '*.ts' '*.tsx' '*.js' '*.jsx')
          IFS=$'\n'
          tested_files=() # Mảng để theo dõi các file test đã được lên lịch chạy

          for file in $CHANGED_FILES; do
            quoted_file="\"$file\""

            if [[ "$file" == *.spec.* ]]; then
              # Kiểm tra xem file spec này đã được lên lịch chạy chưa
              is_tested=false
              for tested in "${tested_files[@]}"; do
                if [[ "$quoted_file" == "$tested" ]]; then
                  is_tested=true
                  break
                fi
              done
              if ! "$is_tested"; then
                echo "Running test for spec file: $file (quoted: $quoted_file)"
                npx vitest "$quoted_file" # Gọi vitest cho file spec
                tested_files+=("$quoted_file") # Thêm vào danh sách đã chạy
              else
                echo "Skipping already tested spec file: $file"
              fi
            elif [[ "$file" == *.ts || "$file" == *.tsx ]]; then
              base_name=$(basename "$file" .ts)
              base_name="${base_name%.tsx}"
              file_dir=$(dirname "$file")
              possible_test_files=(
                "$file_dir/${base_name}.spec.ts"
                "$file_dir/${base_name}.test.ts"
                "$file_dir/${base_name}.spec.tsx"
                "$file_dir/${base_name}.test.tsx"
                "$file_dir/__tests__/${base_name}.spec.ts"
                "$file_dir/__tests__/${base_name}.test.ts"
                "$file_dir/__tests__/${base_name}.spec.tsx"
                "$file_dir/__tests__/${base_name}.test.tsx"
                "$(dirname "$file_dir")/__tests__/${base_name}.spec.ts"
                "$(dirname "$file_dir")/__tests__/${base_name}.test.ts"
                "$(dirname "$file_dir")/__tests__/${base_name}.spec.tsx"
                "$(dirname "$file_dir")/__tests__/${base_name}.test.tsx"
              )
              found_test_file=""
              quoted_test_file=""
              for test_path in "${possible_test_files[@]}"; do
                if [ -f "$test_path" ]; then
                  found_test_file="$test_path"
                  quoted_test_file="\"$test_path\""
                  break
                fi
              done

              if [[ -n "$found_test_file" ]]; then
                # Kiểm tra xem file test này đã được lên lịch chạy chưa
                is_tested=false
                for tested in "${tested_files[@]}"; do
                  if [[ "$quoted_test_file" == "$tested" ]]; then
                    is_tested=true
                    break
                  fi
                done
                if ! "$is_tested"; then
                  echo "Running test for $file (found test file: $found_test_file, quoted: $quoted_test_file)"
                  npx vitest "$quoted_test_file" # Gọi vitest cho file test tìm thấy
                  tested_files+=("$quoted_test_file") # Thêm vào danh sách đã chạy
                else
                  echo "Skipping already tested file: $found_test_file"
                fi
              else
                echo "Skipping test for $file (no related test file found)"
              fi
            fi
          done
